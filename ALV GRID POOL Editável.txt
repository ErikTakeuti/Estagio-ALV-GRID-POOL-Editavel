REPORT z_editable_alv_grid.

TYPES BEGIN OF y_orders_c.

TYPES prod    TYPE ztable_02_prod2-produto.
TYPES desc    TYPE ztable_02_prod2-desc_produto.
TYPES price   TYPE ztable_02_prod2-preco.
TYPES price2  TYPE ztable_02_prod2-preco. "VARIÁVEL EDITÁVEL
TYPES celltab TYPE lvc_t_styl.

TYPES END OF y_orders_c.

DATA: lo_grid     TYPE REF TO cl_gui_alv_grid, "ESTRUTUR CONTENDO O CATÁLOGO DO ALV
      lt_fieldcat TYPE lvc_t_fcat, "ESTRUTURA CONTENDO O CATÁLOGO DO FIELDCAT
      lt_data     TYPE TABLE OF y_orders_c.

DATA: gs_alv_layout TYPE lvc_s_layo.  "ESTRUTURA DE LAYOUT PRINCIPAL

DATA: e_cell_type   TYPE lvc_s_styl. "ESTRUTURA DE ESTILOS DO LAYOUT

DATA: e_orders_c    TYPE y_orders_c.

START-OF-SELECTION.

  CALL SCREEN 100.

*&---------------------------------------------------------------------*
*&      Module  SHOW_ORDERS  OUTPUT
*&---------------------------------------------------------------------*
MODULE show_orders OUTPUT.

  IF NOT lo_grid IS BOUND.

    "CATÁLOGO DOS CAMPOS
    PERFORM f_fieldcat USING lt_data[] CHANGING lt_fieldcat.

    LOOP AT lt_fieldcat  ASSIGNING FIELD-SYMBOL(<fs_fieldcat>). "PARECIDO COM O INTO O ASSIGNING , FIELD-SYMBOL CRIA UMA VARIAVÉL CORRESPONDENDE A VARIÁVEL
      "NÃO SOU OBRIGADO A FAZER ESSE WHEN, SÓ É NECESSÁRIO SE EU QUISER MUDAR O NOME DA COLUNA, PORQUE VEM O NOME DO ELEMENTO DE DADOS POR PADRÃO
      CASE <fs_fieldcat>-fieldname.
        WHEN 'PROD'.
          <fs_fieldcat>-coltext = 'PRODUTO'.

        WHEN 'DSEC'.
          <fs_fieldcat>-coltext = 'DESCRIÇÃO DO PRODUTO'.  "COLOCA O NOME CORRESPONDE DA COLUNA

        WHEN 'PRICE'.
          <fs_fieldcat>-coltext = 'PREÇO ORIGINAL'.

        WHEN 'PRICE2'.
          <fs_fieldcat>-edit = 'X'. "COLOCA UM CAMPO PARA EDITAR
          <fs_fieldcat>-coltext = 'NOVO PREÇO'.
      ENDCASE.
    ENDLOOP.

      "CONFIGURAÇÃO DE LAYOUT DA TELA
      CLEAR gs_alv_layout.
      MOVE abap_true TO: gs_alv_layout-cwidth_opt, "MEXE NO TAMANHO DA COLUNA CONFORME A QUANTIDADE DE CARACTER DA INFORMAÇÃO
                         gs_alv_layout-zebra, " "DEIXA ZEBRADO
                         gs_alv_layout-col_opt. "OTIMIZAÇÃO DE COLUNA EM RELAÇÃO AO SEU TAMANHO
      gs_alv_layout-stylefname = 'CELLTAB'.


      "COLOCA DADOS PADRÕES DA TABELA
      e_orders_c-prod = '1'.
      e_orders_c-desc = 'PRESUNTO'.
      e_orders_c-price = '200'.
      e_orders_c-price2 = '2'.
      APPEND e_orders_c TO lt_data. "PREENCHE A VARIÁVEL TYPES

      CLEAR e_orders_c-prod.
      e_orders_c-prod = '2'.
      e_orders_c-desc = 'QUEIJO'.
      e_orders_c-price = '400'.
      e_orders_c-price2 = '4'.
      APPEND e_orders_c TO lt_data.

      CLEAR e_orders_c-prod.
      e_orders_c-prod = '3'.
      e_orders_c-desc = 'PÃO'.
      e_orders_c-price = '300'.
      e_orders_c-price2 = '3'.
      APPEND e_orders_c TO lt_data.

      CLEAR e_orders_c-prod.
      e_orders_c-prod = '4'.
      e_orders_c-desc = 'REFRIGERANTE'.
      e_orders_c-price = '500'.
      e_orders_c-price2 = '5'.
      APPEND e_orders_c TO lt_data.

      CLEAR e_orders_c-prod.
      e_orders_c-prod = '5'.
      e_orders_c-desc = 'CHOCOLATE'.
      e_orders_c-price = '700'.
      e_orders_c-price2 = '7'.
      APPEND e_orders_c TO lt_data.

      CREATE OBJECT lo_grid
        EXPORTING
          i_parent = cl_gui_container=>screen0. "TIPO DE TELA

      CALL METHOD  lo_grid->set_table_for_first_display "CHAMA A TELA INICIAL
        EXPORTING
          i_structure_name = 'LT_DATA' "NOME DA TELA CRIADA NO LAYOUT
          is_layout        = gs_alv_layout "VARIÁVEL GLOBAL DA ESTRUTURA
        CHANGING
          it_outtab        = lt_data "VARIÁVEL GLOBAL DOS TYPES
          it_fieldcatalog  = lt_fieldcat."VARIÉVEL GLOBAL DO FIELDCAT

      CALL METHOD lo_grid->register_edit_event "MÉTODO DE EDIÇÃO
        EXPORTING
          i_event_id = cl_gui_alv_grid=>mc_evt_enter "EVENTO DE ENTRADA DE DADOS
        EXCEPTIONS
          error  = 1
          OTHERS = 2.
      IF sy-subrc <> 0. "POSSÍVEIS ERROS
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

      ELSE.
        PERFORM f_update_grid USING lo_grid.
   ENDIF.

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'STATUS100'. "SET RESPONSÁVEL PELA INTERAÇÃO DA BARRA DE ATIVIDADES
  SET TITLEBAR 'EDIT_PROD02'. "TITÚLO DA BARRA
ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE sy-ucomm. "ACÃO QUE ATIVA QUANDO CLICA EM UM BOTÃO
    WHEN 'BACK' OR 'EXIT' OR 'CANCEL'.
      LEAVE TO SCREEN '0'.
    WHEN 'SWITCH'.
      PERFORM f_switch_edit_mode.
    WHEN OTHERS.
   ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Form  F_FIELDCAT
*&---------------------------------------------------------------------*

FORM f_fieldcat  USING pt_table TYPE ANY TABLE CHANGING pt_fieldcat TYPE lvc_t_fcat.

  DATA:
    lr_tabdescr TYPE REF TO cl_abap_structdescr,
    lr_data TYPE REF TO data,
    lt_dfies  TYPE ddfields,
    ls_dfies TYPE dfies,
    ls_fieldcat TYPE lvc_s_fcat.

  CLEAR pt_fieldcat.

  " ?= is used to type cast an object reference of an inherited class to an object of the super class from which it is derived
  CREATE DATA lr_data LIKE LINE OF pt_table.
  lr_tabdescr ?= cl_abap_structdescr=>describe_by_data_ref( lr_data ).
  lt_dfies = cl_salv_data_descr=>read_structdescr( lr_tabdescr ).

  LOOP AT lt_dfies INTO ls_dfies.
    CLEAR ls_fieldcat.
    MOVE-CORRESPONDING ls_dfies TO ls_fieldcat.
    APPEND ls_fieldcat TO pt_fieldcat.
  ENDLOOP.

ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  F_SWITCH_EDIT_MODE
*&---------------------------------------------------------------------*

FORM f_switch_edit_mode .

  IF lo_grid->is_ready_for_input( ) EQ 0. "PREPARA A ENTARDA DE DADOS VIA TECLADO

  CALL METHOD lo_grid->set_ready_for_input "COLOCA A ENTRADA DE DADOS VIA TECLADO
    EXPORTING
      i_ready_for_input = 1. "SIM

  ELSE.
    CALL METHOD lo_grid->set_ready_for_input
      EXPORTING
       i_ready_for_input = 0. "NÃO
  ENDIF.

ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  F_UPDATE_GRID
*&---------------------------------------------------------------------*
FORM f_update_grid USING p_grid TYPE REF TO cl_gui_alv_grid.

  DATA vl_stable TYPE lvc_s_stbl."ESTRUTURA CONTENDO O REFRESH DAS COLUNAS E LINHAS

  CHECK p_grid IS BOUND. "CHECA O INSTANCIAMENTO DO ALV

  CLEAR vl_stable.
  MOVE abap_true TO: "SE FOR VERDADE, ELE MUDA A COLUNA E AS LINHAS
    vl_stable-col,
    vl_stable-row.

  CALL METHOD p_grid->refresh_table_display "ATUALIZA A TELA
    EXPORTING
      is_stable = vl_stable
    EXCEPTIONS
      OTHERS    = 99.

  IF sy-subrc NE 0.
    RETURN.
  ENDIF.

ENDFORM.
